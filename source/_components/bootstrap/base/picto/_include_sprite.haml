%script{id: 'svgicons-script'}
	:plain
		(function(url, revision) {
			var storage = window.localStorage || {};
			if (!storage.svgicons ||Â storage.svgicons_revision != revision) {
				fetchJSONFile(url, function(data){
					storage.svgicons = data;
					storage.svgicons_revision = revision;
					init(true);
				});
			}
			if (storage.svgicons) {
				init();
			}

			function init(delayed) {
				var svgEl = document.getElementById('svgicons-sprite');
				svgEl && svgEl.parentNode.removeChild(svgEl);
				var svg = storage.svgicons.replace('<svg ', '<svg id="svgicons-sprite" style="display: none"');
				delayed ? document.body.insertAdjacentHTML('afterbegin', svg) : document.write(svg);
				svgEl = document.getElementById('svgicons-script');
				svgEl && svgEl.parentNode.removeChild(svgEl);
			}

			function fetchJSONFile(path, callback) {
				var httpRequest = new XMLHttpRequest();
				httpRequest.onreadystatechange = function() {
					if (httpRequest.readyState === 4 && httpRequest.status === 200 && callback) {
						callback(httpRequest.responseText);
					}
				};
				httpRequest.open('GET', path);
				httpRequest.send();
			}
		})('#{url_for('/assets/img/svg-sprite.svg')}', '#{checksum(partial('/assets/img/svg-sprite.svg'))}');

		// The revision (second parameter) should change whenever the svg sprite (json) changes.
		// e.g. you can use the modification timestamp of the json file.


